@charset "UTF-8";
@mixin base {
  margin: 0;
  padding: 0;
  line-height: 0;
}

@mixin objectsize($w, $h, $code) {
  @if ($code == "px") {
    width: $w + px;
    height: $h + px;
  } @else if($code == "%") {
    width: $w + unquote("%");
    height: $h + px;
  }
}
%label {
  display: block;
}
*,
body {
  @include base;
}
.btn {
  @include objectsize(100, 30, "px");
  @extend %label;
  text-align: center;
  line-height: 30px;
  position: relative;
  border: 1px solid black;
  // mixin 이랑 extend 랑 같이 불러오면 css 파일에서 따로 나오게 됨
}
.divcss {
  @include objectsize(100, 200, "%");
  border: 1px solid black;
  position: relative;
}

.box {
  @include objectsize(50, 50, "px");
  background-color: red;
  position: absolute;
  left: 50%;
  top: 0;
  transition: all 1s ease;
  // transition-property, transition-duration, transition-timing-function
  //   // 3D
  //   transform-style: preserve-3d;
  //   perspective: 50px;
}
@mixin animation($left, $top) {
  left: $left;
  top: $top;
}

.btn:hover + .divcss > #box {
  // @include animation(100, 100);
  // transform: skewX(45deg) skewY(100deg);
  // transform: rotate(180deg);
  // transform: translate(100px, 100px);
  // 2D : X, Y 3D: X, Y, Z
  // transform: scale(0, 0); // 1은 기본 사이즈 1보다 작으면 줄어들고 1보다 크면 늘어남
  //   transform: scale(1) rotateY(180deg); //  X, Y, Z
  opacity: 0;
  transform: scale(4) rotate(360deg);
}
.divcss2 {
  width: 200px;
  height: 200px;
  // transform-style: preserve-3d;
  margin: 0 auto;
  background-color: gray;
}

.box2 {
  width: 100%;
  height: inherit;
  background-color: blue;
  display: block;
  // perspective 기울기를 줄일려면 수치는 커져야함
  // 3차원 형태의 오브젝트를 만들 때 사용, 또한 rotateX, rotateY 함께 사용
}
.box2:hover {
  transform: perspective(400px) rotateY(45deg);
}
.divcss3 {
  position: relative;
  perspective: 200px;
  // 조금더 극대화 되게 보여짐
  // Z축을 200px 나오도록 하여 회전반경을 좀 더 크게 돌아가도록 함.
  width: 200px;
  border: 1px solid red;
  margin: 0 auto;
}
.divcss3:hover .btns {
  // ⭐엄마를 뒤집자 그래야 뒤집기를 할 수 있음
  transform: rotateY(180deg);
}
.btns {
  display: block;
  width: 200px;
  height: 50px;
  position: relative;
  transform-style: preserve-3d; // Z축을 사용하기 위한 속성 값
  transition: all 0.5s ease-in-out;
}

.views {
  display: block;
  position: absolute;
  width: 200px;
  height: 50px;
  text-align: center;
  line-height: 50px;
  backface-visibility: hidden;
  // 오브젝트 뒤쪽면에서 앞면이 보이게 할 것인지 정하는 옵션, 인터넷익스폴로러에서 작동하기 위해 필요
  // block, hidden
}
.btn_off {
  background-color: white;
  border: 1px solid green;
  box-sizing: border-box;
}
.btn_on {
  color: white;
  background-color: black;
  transform: rotateY(180deg);
}

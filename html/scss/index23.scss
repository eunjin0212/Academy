@charset "UTF-8";
@mixin base {
  margin: 0;
  padding: 0;
  // line-height: 0;
}
@mixin objectsize($w, $h, $display, $position) {
  width: $w;
  height: $h;
  display: $display;
  position: $position;
}
body {
  @include base;
}
.box {
  @include objectsize(300px, auto, grid, relative);
  border: 1px solid black;
  box-sizing: border-box;
  //grid-template-rows: repeat(4,100px);  //모든 행에 반복하면서 100px 동일하게 적용
  grid-template-rows: 50px 100px 100px 150px; //각각의 행에 높이 값을 정하는 형태
  grid-template-columns: 100px 200px; //각각의 열에 가로 값을 정하는 형태
  // grid-template-columns:repeat(2,1fr);  //모든 열에 반복하여 100% (부모기준) 적용
  grid-template-areas:
    "h1 h1"
    "h2 ." //. 공백을 오브젝트를 말하게 됩니다.
    "h3 h4"
    "h5 h5";
  & > label {
    display: block;
  }
  $color: skyblue, yellow, green, black, purple;
  $k: 1;
  @while ($k <= 5) {
    & > .label#{$k} {
      background-color: nth($color, $k);
      grid-area: h#{$k};
    }
    $k: $k + 1;
  }
}

.box2 {
  display: grid;
  max-width: 560px;
  height: auto;
  grid-template-rows: 80px 300px 100px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-areas:
    "g1 g2 g2"
    "g3 g3 g3"
    "s1 s2 s3";

  & > label {
    display: block;
  }
  & > span {
    display: block;
  }
  $color1: skyblue, yellow, green;
  $color2: red, darkblue, pink;
  $h: 1;
  @while ($h <= 3) {
    & > label:nth-of-type(#{$h}) {
      grid-area: g#{$h};
      background-color: nth($color1, $h);
    }
    $h: $h + 1;
  }
  @for $kk from 1 through 3 {
    & > span:nth-of-type(#{$kk}) {
      grid-area: s#{$kk};
      background-color: nth($color2, $kk);
    }
  }
}
